<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="main_theme_color" Color="#0A0B0D"/>
    <SolidColorBrush x:Key="secondary_color" Color="#343A40"/>
    <SolidColorBrush x:Key="main_window_background" Color="#161929"/>
    <SolidColorBrush x:Key="main_window_borders_color" Color="#4D5483"/>
    <SolidColorBrush x:Key="buttons_highlight_color" Color="#7367F0"/>
    <SolidColorBrush x:Key="shadowed_buttons_highlight_color" Color="#4D5483"/>
    <SolidColorBrush x:Key="ErrorColor" Color="#D0011B"/>
    <SolidColorBrush x:Key="ShadowedErrorColor" Color="#B80117"/>
    <SolidColorBrush x:Key="main_font_color" Color="#FBFBFB"/>
    <SolidColorBrush x:Key="place_holder_font_color" Color="#7F7F7F"/>

    <LinearGradientBrush x:Key="main_window_header_gradient" 
                         StartPoint="0,0" 
                         EndPoint="1,1">

        <GradientStop Color="#000000" Offset="0"/>
        <GradientStop Color="#2E3147" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="list_view_item_gradient"
                         StartPoint="0,0"
                         EndPoint="1,1">

        <GradientStop Color="#4D5483" Offset="0"/>
        <GradientStop Color="#7367F0" Offset="1"/>
    </LinearGradientBrush>

    <DropShadowEffect x:Key="main_window_drop_shadow" ShadowDepth="10"/>

    <Style x:Key="main_textblocks_style" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="century"/>
        <Setter Property="Foreground" Value="{StaticResource main_font_color}"/>
    </Style>

    <Style x:Key="main_textboxes_style" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="century"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource main_font_color}"/>
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="CaretBrush" Value="{StaticResource main_font_color}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">

                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Focusable="false" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" 
                                    Property="BorderBrush" 
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" 
                                    Property="BorderBrush" 
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="main_buttons_style" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource main_font_color}"/>
        <Setter Property="FontFamily" Value="century"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="highlight"
                            Opacity="{TemplateBinding Opacity}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="highlight" 
                                    Property="Background" 
                                    Value="{Binding Tag.MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="highlight" 
                                    Property="Opacity" 
                                    Value="{Binding Tag.OnEventOpacity, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="highlight" 
                                    Property="Background"
                                    Value="{Binding Tag.IsPressedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="highlight" 
                                    Property="Opacity" 
                                    Value="{Binding Tag.OnEventOpacity, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="thumb"
                            SnapsToDevicePixels="True"
                            Background="{StaticResource main_window_borders_color}"
                            CornerRadius="5,0,0,5"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"/>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="thumb" 
                                    Property="Background" 
                                    Value="{StaticResource buttons_highlight_color}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Width" Value="7"/>
        <Setter Property="MinWidth" Value="{Binding Width, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="Transparent">
                        <Border>
                            <Track x:Name="PART_Track"
                                   IsDirectionReversed="true"
                                   IsEnabled="{TemplateBinding IsMouseOver}"
                                   Width="10"
                                   HorizontalAlignment="Center">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageUpCommand}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageDownCommand}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="14"/>
                <Setter Property="MinHeight" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Margin" Value="0 -14 0 0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="part_Track"
                                       IsEnabled="{TemplateBinding IsMouseOver}"
                                       Height="6"
                                       >
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Opacity="0" 
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Opacity="0" 
                                                      Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="part_thumb" Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                CanHorizontallyScroll="False" 
                                                CanVerticallyScroll="False" 
                                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                Content="{TemplateBinding Content}" 
                                                Grid.Column="0" 
                                                Margin="{TemplateBinding Padding}" 
                                                Grid.Row="0"/>
                        
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   AutomationProperties.AutomationId="VerticalScrollBar" 
                                   Opacity="0.2"
                                   Cursor="Arrow" 
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}" 
                                   Minimum="0" 
                                   Grid.Row="0" 
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" 
                                                     Duration="0:0:0.3" 
                                                     Storyboard.TargetName="PART_VerticalScrollBar" 
                                                     Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0.2" 
                                                     Duration="0:0:0.3" 
                                                     Storyboard.TargetName="PART_VerticalScrollBar" 
                                                     Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="test" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
             TargetType="{x:Type ToggleButton}">
                    <Border x:Name="ExpanderButtonBorder"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}"
            >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="Transparent"
                       Grid.ColumnSpan="2"/>
                            <Ellipse Name="Circle"
                 Grid.Column="0"
                 Stroke="DarkGray"
                 Width="20"
                 Height="20"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 />
                            <Path x:Name="Sign"
              Grid.Column="0"
              Data="M 0,5 H 10 M 5,0 V 10 Z"
              Stroke="#FF666666"
              Width="10"
              Height="10"
              StrokeThickness="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RenderTransformOrigin="0.5,0.5"
              >
                                <Path.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Path.RenderTransform>
                            </Path>
                            <ContentPresenter x:Name="HeaderContent"
                          Grid.Column="1"
                          Margin="4,0,0,0"
                          ContentSource="Content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--Change the sign to minus when toggled-->
                        <Trigger Property="IsChecked"
                 Value="True">
                            <Setter Property="Data" 
               TargetName="Sign" Value="M 0,5 H 10 Z"/>
                        </Trigger>

                        <!-- MouseOver, Pressed behaviours-->
                        <Trigger Property="IsMouseOver"
                         Value="true">
                            <Setter Property="Stroke"
                            Value="#FF3C7FB1"
                            TargetName="Circle"/>
                            <Setter Property="Stroke"
                            Value="#222"
                            TargetName="Sign"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                         Value="true">
                            <Setter Property="Stroke"
                            Value="#FF526C7B"
                            TargetName="Circle"/>
                            <Setter Property="StrokeThickness"
                            Value="1.5"
                            TargetName="Circle"/>
                            <Setter Property="Stroke"
                            Value="#FF003366"
                            TargetName="Sign"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>